(()=>{"use strict";const e=[{title:"test 1",desc:"test 1",date:"2022-05-25",prior:"priority-low"},{title:"test 2",desc:"test 2",date:"2022-05-27",prior:"priority-high"}],t=[{name:"All tasks",color:"#5d9963",details:"Find all tasks here",relatedTasks:e}],r={createNewProject:(e,r,a)=>{const n=((e,t,r)=>{const o=[];return{name:e,color:t,details:r,relatedTasks:o,addATask:e=>{o.unshift(e)}}})(e,r,a),s=document.querySelector(".projects-list");var l;o.displayElement(n,s),"All tasks"!==e&&(l=n,t.push(l))},addTaskToArray:t=>{e.push(t)},filterTasks:t=>"All tasks"===t.name?e:e.filter((e=>e.projectID===t.name)),deleteTask:(t,r)=>{e.splice(e.indexOf(r),1),o.removeTaskFromDisplay(t)}},o=(()=>{const e=(e,t)=>{const r=document.querySelector("#main"),o=document.createElement("div");void 0===t?o.classList.add("task-item",e.prior):o.classList.add("task-item",e.prior,t),o.innerHTML=`\n            <div class="check-btn btn-pointer"></div>\n            <div class="main-task-infos">\n                <div class="task-title">${e.title}</div>\n                <div class="details">${e.desc}</div>\n            </div>\n            <div class="date">${e.date}</div>\n            <div class="delete-btn btn-pointer"></div>\n        `,o.objectAssign=e,r.prepend(o)};return{openForm:(e,t)=>{if("project"===e){const e=document.querySelector("#overlay-project");e.classList.add("show-overlay"),e.innerHTML='\n        <form class="create-new">\n            <div class="create-new--header">Create a new project<div id="close-form-btn"></div></div>\n            <div class="create-new--content">\n                <label for="new-project--name">Project Name:</label>\n                <input type="text" id="new-project--name" name="new-project" required>\n                <label for="new-project--desc">Details:</label>\n                <textarea id="new-project--desc" name="new-project" maxlength="80"></textarea>\n                <div class="wrap-priority-submit">\n                    <div>\n                        <label for="new-project--color">Color:</label>\n                        <input type="color" id="new-project--color" name="new-project" required>\n                    </div>\n                    <button>Create</button>\n                </div>\n            </div>\n        </form>\n'}else if("task"===e){const e=document.querySelector("#overlay-task");e.classList.add("show-overlay"),e.innerHTML='\n    <form class="create-new">\n        <div class="create-new--header">Create a new task<div id="close-form-btn"></div></div>\n        <div class="create-new--content">\n            <textarea class="create-new_input" id="new-todo--title" name="new-todo" placeholder="Title: Create a title" required></textarea>\n            <textarea class="create-new_input" id="new-todo--description" name="new-todo" placeholder="Details: Add a description" required></textarea>\n            <div class="create-new_date">\n                <label for="new-todo--date">Due Date:</label>\n                <input type="date" id="new-todo--date" name="new-todo" required>\n            </div>\n            <div class="wrap-priority-submit">\n                <div class="new-todo--priority">\n                    <div class="todo-prior-label">Priority:</div>\n                    <label class="radio-label radio-label-low" for="low"><span class="low">low</span>\n                        <input type="radio" id="low" name="new-todo--prior" value="priority-low" required>\n                    </label>\n                    <label class="radio-label radio-label-medium" for="medium"><span class="medium">medium</span>\n                        <input type="radio" id="medium" name="new-todo--prior" value="priority-medium" required>\n                    </label>\n                    <label class="radio-label radio-label-high" for="high"><span class="high">high</span>\n                        <input type="radio" id="high" name="new-todo--prior" value="priority-high" required>\n                    </label>\n                </div>\n                <button>Create</button>\n            </div>\n        </div>\n    </form>\n',e.relatedProject=t,console.log(e.relatedProject)}},closeForm:e=>{if("project"===e){const e=document.querySelector("#overlay-project");e.classList.remove("show-overlay"),e.innerHTML=""}else if("task"===e){const e=document.querySelector("#overlay-task");e.classList.remove("show-overlay"),e.innerHTML=""}},displayElement:(e,t)=>{t.appendChild((e=>{const t=document.createElement("li");return t.classList.add("project-item","btn-pointer"),t.obj_ID=e,t.innerHTML=`<div class= "project-color" style="background: ${e.color}"></div>${e.name}`,t})(e))},displayProjectList:(t,r)=>{const o=document.querySelector(".chosen-list-title"),a=document.querySelector(".project-details"),n=document.querySelector("#header");o.textContent=t.name,a.textContent=t.details,n.style.backgroundColor=t.color,(e=>{document.querySelector("#main").innerHTML="";const t=document.createElement("div");t.classList.add("new-task-card","btn-pointer"),t.innerHTML='<img class="new-task-btn" src="./assets/add.png" alt="plus icon">Add a Task',t.relatedProject=e,document.querySelector("#main").appendChild(t)})(t),((t,r)=>{t.forEach((t=>{e(t,r)}))})(r)},addTaskToList:e,removeTaskFromDisplay:e=>{document.querySelector("#main").removeChild(e)}}})();document.querySelector("#overlay-project").addEventListener("submit",(e=>{e.preventDefault();const t=document.querySelector("#new-project--name").value,a=document.querySelector("#new-project--color").value,n=document.querySelector("#new-project--desc").value;r.createNewProject(t,a,n),o.closeForm("project")})),document.querySelector("#overlay-task").addEventListener("submit",(t=>{t.preventDefault(),console.log(e);const a=document.querySelector("#overlay-task").relatedProject,n=(s=document.querySelector("#new-todo--title").value,l=document.querySelector("#new-todo--description").value,d=document.querySelector("#new-todo--date").value,i=document.querySelector('input[type="radio"]:checked').value,c=a.name,{title:s,desc:l,date:d,prior:i,projectID:c});var s,l,d,i,c;o.addTaskToList(n),r.addTaskToArray(n),o.closeForm("task")})),document.addEventListener("DOMContentLoaded",(()=>{t.forEach((e=>{o.displayElement(e,document.querySelector(".projects-list"))})),o.displayProjectList(t[0],e)})),document.querySelector(".new-list-btn").addEventListener("click",(()=>{o.openForm("project")})),document.querySelector("#overlay-project").addEventListener("click",(e=>{"close-form-btn"===e.target.id&&o.closeForm("project")})),document.querySelector("#overlay-task").addEventListener("click",(e=>{"close-form-btn"===e.target.id&&o.closeForm("task")})),document.addEventListener("click",(e=>{e.target.classList.contains("new-task-card")&&o.openForm("task",e.target.relatedProject)})),document.querySelector(".projects-list").addEventListener("click",(e=>{e.target.classList.contains("project-item")&&o.displayProjectList(e.target.obj_ID,r.filterTasks(e.target.obj_ID))})),document.addEventListener("click",(e=>{e.target.classList.contains("delete-btn")&&r.deleteTask(e.target.parentNode,e.target.parentNode.objectAssign)}))})();